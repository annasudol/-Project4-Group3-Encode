{"ast":null,"code":"import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n  if (typeof message === \"string\") {\n    message = toUtf8Bytes(message);\n  }\n\n  return keccak256(concat([toUtf8Bytes(messagePrefix), toUtf8Bytes(String(message.length)), message]));\n}","map":{"version":3,"names":["concat","keccak256","toUtf8Bytes","messagePrefix","hashMessage","message","String","length"],"sources":["/Users/annasudol/Documents/encode/Project4-Group3-Encode/frontend/node_modules/@ethersproject/hash/lib.esm/message.js"],"sourcesContent":["import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,sBAAvB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAO,MAAMC,aAAa,GAAG,gCAAtB;AACP,OAAO,SAASC,WAAT,CAAqBC,OAArB,EAA8B;EACjC,IAAI,OAAQA,OAAR,KAAqB,QAAzB,EAAmC;IAC/BA,OAAO,GAAGH,WAAW,CAACG,OAAD,CAArB;EACH;;EACD,OAAOJ,SAAS,CAACD,MAAM,CAAC,CACpBE,WAAW,CAACC,aAAD,CADS,EAEpBD,WAAW,CAACI,MAAM,CAACD,OAAO,CAACE,MAAT,CAAP,CAFS,EAGpBF,OAHoB,CAAD,CAAP,CAAhB;AAKH"},"metadata":{},"sourceType":"module"}