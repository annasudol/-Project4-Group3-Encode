{"ast":null,"code":"\"use strict\";\n\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\n\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n  const fetcher = \"Web3LegacyFetcher\";\n  return function (method, params) {\n    const request = {\n      method: method,\n      params: params,\n      id: _nextId++,\n      jsonrpc: \"2.0\"\n    };\n    return new Promise((resolve, reject) => {\n      this.emit(\"debug\", {\n        action: \"request\",\n        fetcher,\n        request: deepCopy(request),\n        provider: this\n      });\n      sendFunc(request, (error, response) => {\n        if (error) {\n          this.emit(\"debug\", {\n            action: \"response\",\n            fetcher,\n            error,\n            request,\n            provider: this\n          });\n          return reject(error);\n        }\n\n        this.emit(\"debug\", {\n          action: \"response\",\n          fetcher,\n          request,\n          response,\n          provider: this\n        });\n\n        if (response.error) {\n          const error = new Error(response.error.message);\n          error.code = response.error.code;\n          error.data = response.error.data;\n          return reject(error);\n        }\n\n        resolve(response.result);\n      });\n    });\n  };\n}\n\nfunction buildEip1193Fetcher(provider) {\n  return function (method, params) {\n    if (params == null) {\n      params = [];\n    }\n\n    const request = {\n      method,\n      params\n    };\n    this.emit(\"debug\", {\n      action: \"request\",\n      fetcher: \"Eip1193Fetcher\",\n      request: deepCopy(request),\n      provider: this\n    });\n    return provider.request(request).then(response => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        fetcher: \"Eip1193Fetcher\",\n        request,\n        response,\n        provider: this\n      });\n      return response;\n    }, error => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        fetcher: \"Eip1193Fetcher\",\n        request,\n        error,\n        provider: this\n      });\n      throw error;\n    });\n  };\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n  constructor(provider, network) {\n    if (provider == null) {\n      logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n    }\n\n    let path = null;\n    let jsonRpcFetchFunc = null;\n    let subprovider = null;\n\n    if (typeof provider === \"function\") {\n      path = \"unknown:\";\n      jsonRpcFetchFunc = provider;\n    } else {\n      path = provider.host || provider.path || \"\";\n\n      if (!path && provider.isMetaMask) {\n        path = \"metamask\";\n      }\n\n      subprovider = provider;\n\n      if (provider.request) {\n        if (path === \"\") {\n          path = \"eip-1193:\";\n        }\n\n        jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n      } else if (provider.sendAsync) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n      } else if (provider.send) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n      } else {\n        logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n      }\n\n      if (!path) {\n        path = \"unknown:\";\n      }\n    }\n\n    super(path, network);\n    defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n    defineReadOnly(this, \"provider\", subprovider);\n  }\n\n  send(method, params) {\n    return this.jsonRpcFetchFunc(method, params);\n  }\n\n}","map":{"version":3,"names":["deepCopy","defineReadOnly","Logger","version","logger","JsonRpcProvider","_nextId","buildWeb3LegacyFetcher","provider","sendFunc","fetcher","method","params","request","id","jsonrpc","Promise","resolve","reject","emit","action","error","response","Error","message","code","data","result","buildEip1193Fetcher","then","Web3Provider","constructor","network","throwArgumentError","path","jsonRpcFetchFunc","subprovider","host","isMetaMask","sendAsync","bind","send"],"sources":["/Users/annasudol/Documents/encode/Project4-Group3-Encode/frontend/node_modules/@ethersproject/providers/lib.esm/web3-provider.js"],"sourcesContent":["\"use strict\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n    const fetcher = \"Web3LegacyFetcher\";\n    return function (method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n            sendFunc(request, (error, response) => {\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n                    return reject(error);\n                }\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    error.code = response.error.code;\n                    error.data = response.error.data;\n                    return reject(error);\n                }\n                resolve(response.result);\n            });\n        });\n    };\n}\nfunction buildEip1193Fetcher(provider) {\n    return function (method, params) {\n        if (params == null) {\n            params = [];\n        }\n        const request = { method, params };\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n            return response;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n            throw error;\n        });\n    };\n}\nexport class Web3Provider extends JsonRpcProvider {\n    constructor(provider, network) {\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n        let path = null;\n        let jsonRpcFetchFunc = null;\n        let subprovider = null;\n        if (typeof (provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n        }\n        else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n            subprovider = provider;\n            if (provider.request) {\n                if (path === \"\") {\n                    path = \"eip-1193:\";\n                }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            }\n            else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            }\n            else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            }\n            else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n            if (!path) {\n                path = \"unknown:\";\n            }\n        }\n        super(path, network);\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n    send(method, params) {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n"],"mappings":"AAAA;;AACA,SAASA,QAAT,EAAmBC,cAAnB,QAAyC,2BAAzC;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,MAAMC,MAAM,GAAG,IAAIF,MAAJ,CAAWC,OAAX,CAAf;AACA,SAASE,eAAT,QAAgC,qBAAhC;AACA,IAAIC,OAAO,GAAG,CAAd;;AACA,SAASC,sBAAT,CAAgCC,QAAhC,EAA0CC,QAA1C,EAAoD;EAChD,MAAMC,OAAO,GAAG,mBAAhB;EACA,OAAO,UAAUC,MAAV,EAAkBC,MAAlB,EAA0B;IAC7B,MAAMC,OAAO,GAAG;MACZF,MAAM,EAAEA,MADI;MAEZC,MAAM,EAAEA,MAFI;MAGZE,EAAE,EAAGR,OAAO,EAHA;MAIZS,OAAO,EAAE;IAJG,CAAhB;IAMA,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACpC,KAAKC,IAAL,CAAU,OAAV,EAAmB;QACfC,MAAM,EAAE,SADO;QAEfV,OAFe;QAGfG,OAAO,EAAEb,QAAQ,CAACa,OAAD,CAHF;QAIfL,QAAQ,EAAE;MAJK,CAAnB;MAMAC,QAAQ,CAACI,OAAD,EAAU,CAACQ,KAAD,EAAQC,QAAR,KAAqB;QACnC,IAAID,KAAJ,EAAW;UACP,KAAKF,IAAL,CAAU,OAAV,EAAmB;YACfC,MAAM,EAAE,UADO;YAEfV,OAFe;YAGfW,KAHe;YAIfR,OAJe;YAKfL,QAAQ,EAAE;UALK,CAAnB;UAOA,OAAOU,MAAM,CAACG,KAAD,CAAb;QACH;;QACD,KAAKF,IAAL,CAAU,OAAV,EAAmB;UACfC,MAAM,EAAE,UADO;UAEfV,OAFe;UAGfG,OAHe;UAIfS,QAJe;UAKfd,QAAQ,EAAE;QALK,CAAnB;;QAOA,IAAIc,QAAQ,CAACD,KAAb,EAAoB;UAChB,MAAMA,KAAK,GAAG,IAAIE,KAAJ,CAAUD,QAAQ,CAACD,KAAT,CAAeG,OAAzB,CAAd;UACAH,KAAK,CAACI,IAAN,GAAaH,QAAQ,CAACD,KAAT,CAAeI,IAA5B;UACAJ,KAAK,CAACK,IAAN,GAAaJ,QAAQ,CAACD,KAAT,CAAeK,IAA5B;UACA,OAAOR,MAAM,CAACG,KAAD,CAAb;QACH;;QACDJ,OAAO,CAACK,QAAQ,CAACK,MAAV,CAAP;MACH,CAzBO,CAAR;IA0BH,CAjCM,CAAP;EAkCH,CAzCD;AA0CH;;AACD,SAASC,mBAAT,CAA6BpB,QAA7B,EAAuC;EACnC,OAAO,UAAUG,MAAV,EAAkBC,MAAlB,EAA0B;IAC7B,IAAIA,MAAM,IAAI,IAAd,EAAoB;MAChBA,MAAM,GAAG,EAAT;IACH;;IACD,MAAMC,OAAO,GAAG;MAAEF,MAAF;MAAUC;IAAV,CAAhB;IACA,KAAKO,IAAL,CAAU,OAAV,EAAmB;MACfC,MAAM,EAAE,SADO;MAEfV,OAAO,EAAE,gBAFM;MAGfG,OAAO,EAAEb,QAAQ,CAACa,OAAD,CAHF;MAIfL,QAAQ,EAAE;IAJK,CAAnB;IAMA,OAAOA,QAAQ,CAACK,OAAT,CAAiBA,OAAjB,EAA0BgB,IAA1B,CAAgCP,QAAD,IAAc;MAChD,KAAKH,IAAL,CAAU,OAAV,EAAmB;QACfC,MAAM,EAAE,UADO;QAEfV,OAAO,EAAE,gBAFM;QAGfG,OAHe;QAIfS,QAJe;QAKfd,QAAQ,EAAE;MALK,CAAnB;MAOA,OAAOc,QAAP;IACH,CATM,EASHD,KAAD,IAAW;MACV,KAAKF,IAAL,CAAU,OAAV,EAAmB;QACfC,MAAM,EAAE,UADO;QAEfV,OAAO,EAAE,gBAFM;QAGfG,OAHe;QAIfQ,KAJe;QAKfb,QAAQ,EAAE;MALK,CAAnB;MAOA,MAAMa,KAAN;IACH,CAlBM,CAAP;EAmBH,CA9BD;AA+BH;;AACD,OAAO,MAAMS,YAAN,SAA2BzB,eAA3B,CAA2C;EAC9C0B,WAAW,CAACvB,QAAD,EAAWwB,OAAX,EAAoB;IAC3B,IAAIxB,QAAQ,IAAI,IAAhB,EAAsB;MAClBJ,MAAM,CAAC6B,kBAAP,CAA0B,kBAA1B,EAA8C,UAA9C,EAA0DzB,QAA1D;IACH;;IACD,IAAI0B,IAAI,GAAG,IAAX;IACA,IAAIC,gBAAgB,GAAG,IAAvB;IACA,IAAIC,WAAW,GAAG,IAAlB;;IACA,IAAI,OAAQ5B,QAAR,KAAsB,UAA1B,EAAsC;MAClC0B,IAAI,GAAG,UAAP;MACAC,gBAAgB,GAAG3B,QAAnB;IACH,CAHD,MAIK;MACD0B,IAAI,GAAG1B,QAAQ,CAAC6B,IAAT,IAAiB7B,QAAQ,CAAC0B,IAA1B,IAAkC,EAAzC;;MACA,IAAI,CAACA,IAAD,IAAS1B,QAAQ,CAAC8B,UAAtB,EAAkC;QAC9BJ,IAAI,GAAG,UAAP;MACH;;MACDE,WAAW,GAAG5B,QAAd;;MACA,IAAIA,QAAQ,CAACK,OAAb,EAAsB;QAClB,IAAIqB,IAAI,KAAK,EAAb,EAAiB;UACbA,IAAI,GAAG,WAAP;QACH;;QACDC,gBAAgB,GAAGP,mBAAmB,CAACpB,QAAD,CAAtC;MACH,CALD,MAMK,IAAIA,QAAQ,CAAC+B,SAAb,EAAwB;QACzBJ,gBAAgB,GAAG5B,sBAAsB,CAACC,QAAD,EAAWA,QAAQ,CAAC+B,SAAT,CAAmBC,IAAnB,CAAwBhC,QAAxB,CAAX,CAAzC;MACH,CAFI,MAGA,IAAIA,QAAQ,CAACiC,IAAb,EAAmB;QACpBN,gBAAgB,GAAG5B,sBAAsB,CAACC,QAAD,EAAWA,QAAQ,CAACiC,IAAT,CAAcD,IAAd,CAAmBhC,QAAnB,CAAX,CAAzC;MACH,CAFI,MAGA;QACDJ,MAAM,CAAC6B,kBAAP,CAA0B,sBAA1B,EAAkD,UAAlD,EAA8DzB,QAA9D;MACH;;MACD,IAAI,CAAC0B,IAAL,EAAW;QACPA,IAAI,GAAG,UAAP;MACH;IACJ;;IACD,MAAMA,IAAN,EAAYF,OAAZ;IACA/B,cAAc,CAAC,IAAD,EAAO,kBAAP,EAA2BkC,gBAA3B,CAAd;IACAlC,cAAc,CAAC,IAAD,EAAO,UAAP,EAAmBmC,WAAnB,CAAd;EACH;;EACDK,IAAI,CAAC9B,MAAD,EAASC,MAAT,EAAiB;IACjB,OAAO,KAAKuB,gBAAL,CAAsBxB,MAAtB,EAA8BC,MAA9B,CAAP;EACH;;AA3C6C"},"metadata":{},"sourceType":"module"}