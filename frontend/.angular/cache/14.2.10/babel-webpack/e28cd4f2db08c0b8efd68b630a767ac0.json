{"ast":null,"code":"\"use strict\";\n\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst names = [\"wei\", \"kwei\", \"mwei\", \"gwei\", \"szabo\", \"finney\", \"ether\"]; // Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\n\nexport function commify(value) {\n  const comps = String(value).split(\".\");\n\n  if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || comps[1] && !comps[1].match(/^[0-9]*$/) || value === \".\" || value === \"-.\") {\n    logger.throwArgumentError(\"invalid value\", \"value\", value);\n  } // Make sure we have at least one whole digit (0 if none)\n\n\n  let whole = comps[0];\n  let negative = \"\";\n\n  if (whole.substring(0, 1) === \"-\") {\n    negative = \"-\";\n    whole = whole.substring(1);\n  } // Make sure we have at least 1 whole digit with no leading zeros\n\n\n  while (whole.substring(0, 1) === \"0\") {\n    whole = whole.substring(1);\n  }\n\n  if (whole === \"\") {\n    whole = \"0\";\n  }\n\n  let suffix = \"\";\n\n  if (comps.length === 2) {\n    suffix = \".\" + (comps[1] || \"0\");\n  }\n\n  while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n    suffix = suffix.substring(0, suffix.length - 1);\n  }\n\n  const formatted = [];\n\n  while (whole.length) {\n    if (whole.length <= 3) {\n      formatted.unshift(whole);\n      break;\n    } else {\n      const index = whole.length - 3;\n      formatted.unshift(whole.substring(index));\n      whole = whole.substring(0, index);\n    }\n  }\n\n  return negative + formatted.join(\",\") + suffix;\n}\nexport function formatUnits(value, unitName) {\n  if (typeof unitName === \"string\") {\n    const index = names.indexOf(unitName);\n\n    if (index !== -1) {\n      unitName = 3 * index;\n    }\n  }\n\n  return formatFixed(value, unitName != null ? unitName : 18);\n}\nexport function parseUnits(value, unitName) {\n  if (typeof value !== \"string\") {\n    logger.throwArgumentError(\"value must be a string\", \"value\", value);\n  }\n\n  if (typeof unitName === \"string\") {\n    const index = names.indexOf(unitName);\n\n    if (index !== -1) {\n      unitName = 3 * index;\n    }\n  }\n\n  return parseFixed(value, unitName != null ? unitName : 18);\n}\nexport function formatEther(wei) {\n  return formatUnits(wei, 18);\n}\nexport function parseEther(ether) {\n  return parseUnits(ether, 18);\n}","map":{"version":3,"names":["formatFixed","parseFixed","Logger","version","logger","names","commify","value","comps","String","split","length","match","throwArgumentError","whole","negative","substring","suffix","formatted","unshift","index","join","formatUnits","unitName","indexOf","parseUnits","formatEther","wei","parseEther","ether"],"sources":["/Users/annasudol/Documents/encode/Project4-Group3-Encode/frontend/node_modules/@ethersproject/units/lib.esm/index.js"],"sourcesContent":["\"use strict\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value) {\n    const comps = String(value).split(\".\");\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") {\n        whole = whole.substring(1);\n    }\n    if (whole === \"\") {\n        whole = \"0\";\n    }\n    let suffix = \"\";\n    if (comps.length === 2) {\n        suffix = \".\" + (comps[1] || \"0\");\n    }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(\",\") + suffix;\n}\nexport function formatUnits(value, unitName) {\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return formatFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function parseUnits(value, unitName) {\n    if (typeof (value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return parseFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexport function parseEther(ether) {\n    return parseUnits(ether, 18);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}