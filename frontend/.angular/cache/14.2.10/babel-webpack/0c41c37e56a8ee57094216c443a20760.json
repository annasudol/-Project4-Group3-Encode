{"ast":null,"code":"\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\nexport class PocketProvider extends UrlJsonRpcProvider {\n  static getApiKey(apiKey) {\n    const apiKeyObj = {\n      applicationId: null,\n      loadBalancer: true,\n      applicationSecretKey: null\n    }; // Parse applicationId and applicationSecretKey\n\n    if (apiKey == null) {\n      apiKeyObj.applicationId = defaultApplicationId;\n    } else if (typeof apiKey === \"string\") {\n      apiKeyObj.applicationId = apiKey;\n    } else if (apiKey.applicationSecretKey != null) {\n      apiKeyObj.applicationId = apiKey.applicationId;\n      apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n    } else if (apiKey.applicationId) {\n      apiKeyObj.applicationId = apiKey.applicationId;\n    } else {\n      logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n    }\n\n    return apiKeyObj;\n  }\n\n  static getUrl(network, apiKey) {\n    let host = null;\n\n    switch (network ? network.name : \"unknown\") {\n      case \"goerli\":\n        host = \"eth-goerli.gateway.pokt.network\";\n        break;\n\n      case \"homestead\":\n        host = \"eth-mainnet.gateway.pokt.network\";\n        break;\n\n      case \"kovan\":\n        host = \"poa-kovan.gateway.pokt.network\";\n        break;\n\n      case \"matic\":\n        host = \"poly-mainnet.gateway.pokt.network\";\n        break;\n\n      case \"maticmum\":\n        host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n        break;\n\n      case \"rinkeby\":\n        host = \"eth-rinkeby.gateway.pokt.network\";\n        break;\n\n      case \"ropsten\":\n        host = \"eth-ropsten.gateway.pokt.network\";\n        break;\n\n      default:\n        logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"network\",\n          value: network\n        });\n    }\n\n    const url = `https:/\\/${host}/v1/lb/${apiKey.applicationId}`;\n    const connection = {\n      headers: {},\n      url\n    };\n\n    if (apiKey.applicationSecretKey != null) {\n      connection.user = \"\";\n      connection.password = apiKey.applicationSecretKey;\n    }\n\n    return connection;\n  }\n\n  isCommunityResource() {\n    return this.applicationId === defaultApplicationId;\n  }\n\n}","map":{"version":3,"names":["Logger","version","logger","UrlJsonRpcProvider","defaultApplicationId","PocketProvider","getApiKey","apiKey","apiKeyObj","applicationId","loadBalancer","applicationSecretKey","throwArgumentError","getUrl","network","host","name","throwError","errors","INVALID_ARGUMENT","argument","value","url","connection","headers","user","password","isCommunityResource"],"sources":["/Users/annasudol/Documents/encode/Project4-Group3-Encode/frontend/node_modules/@ethersproject/providers/lib.esm/pocket-provider.js"],"sourcesContent":["\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\nexport class PocketProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        const apiKeyObj = {\n            applicationId: null,\n            loadBalancer: true,\n            applicationSecretKey: null\n        };\n        // Parse applicationId and applicationSecretKey\n        if (apiKey == null) {\n            apiKeyObj.applicationId = defaultApplicationId;\n        }\n        else if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n        }\n        else if (apiKey.applicationSecretKey != null) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n        }\n        else if (apiKey.applicationId) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n        }\n        else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n            case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        const url = `https:/\\/${host}/v1/lb/${apiKey.applicationId}`;\n        const connection = { headers: {}, url };\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n"],"mappings":"AAAA;;AACA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,MAAMC,MAAM,GAAG,IAAIF,MAAJ,CAAWC,OAAX,CAAf;AACA,SAASE,kBAAT,QAAmC,yBAAnC;AACA,MAAMC,oBAAoB,GAAG,0BAA7B;AACA,OAAO,MAAMC,cAAN,SAA6BF,kBAA7B,CAAgD;EACnC,OAATG,SAAS,CAACC,MAAD,EAAS;IACrB,MAAMC,SAAS,GAAG;MACdC,aAAa,EAAE,IADD;MAEdC,YAAY,EAAE,IAFA;MAGdC,oBAAoB,EAAE;IAHR,CAAlB,CADqB,CAMrB;;IACA,IAAIJ,MAAM,IAAI,IAAd,EAAoB;MAChBC,SAAS,CAACC,aAAV,GAA0BL,oBAA1B;IACH,CAFD,MAGK,IAAI,OAAQG,MAAR,KAAoB,QAAxB,EAAkC;MACnCC,SAAS,CAACC,aAAV,GAA0BF,MAA1B;IACH,CAFI,MAGA,IAAIA,MAAM,CAACI,oBAAP,IAA+B,IAAnC,EAAyC;MAC1CH,SAAS,CAACC,aAAV,GAA0BF,MAAM,CAACE,aAAjC;MACAD,SAAS,CAACG,oBAAV,GAAiCJ,MAAM,CAACI,oBAAxC;IACH,CAHI,MAIA,IAAIJ,MAAM,CAACE,aAAX,EAA0B;MAC3BD,SAAS,CAACC,aAAV,GAA0BF,MAAM,CAACE,aAAjC;IACH,CAFI,MAGA;MACDP,MAAM,CAACU,kBAAP,CAA0B,mCAA1B,EAA+D,QAA/D,EAAyEL,MAAzE;IACH;;IACD,OAAOC,SAAP;EACH;;EACY,OAANK,MAAM,CAACC,OAAD,EAAUP,MAAV,EAAkB;IAC3B,IAAIQ,IAAI,GAAG,IAAX;;IACA,QAAQD,OAAO,GAAGA,OAAO,CAACE,IAAX,GAAkB,SAAjC;MACI,KAAK,QAAL;QACID,IAAI,GAAG,iCAAP;QACA;;MACJ,KAAK,WAAL;QACIA,IAAI,GAAG,kCAAP;QACA;;MACJ,KAAK,OAAL;QACIA,IAAI,GAAG,gCAAP;QACA;;MACJ,KAAK,OAAL;QACIA,IAAI,GAAG,mCAAP;QACA;;MACJ,KAAK,UAAL;QACIA,IAAI,GAAG,yCAAP;QACA;;MACJ,KAAK,SAAL;QACIA,IAAI,GAAG,kCAAP;QACA;;MACJ,KAAK,SAAL;QACIA,IAAI,GAAG,kCAAP;QACA;;MACJ;QACIb,MAAM,CAACe,UAAP,CAAkB,qBAAlB,EAAyCjB,MAAM,CAACkB,MAAP,CAAcC,gBAAvD,EAAyE;UACrEC,QAAQ,EAAE,SAD2D;UAErEC,KAAK,EAAEP;QAF8D,CAAzE;IAvBR;;IA4BA,MAAMQ,GAAG,GAAI,YAAWP,IAAK,UAASR,MAAM,CAACE,aAAc,EAA3D;IACA,MAAMc,UAAU,GAAG;MAAEC,OAAO,EAAE,EAAX;MAAeF;IAAf,CAAnB;;IACA,IAAIf,MAAM,CAACI,oBAAP,IAA+B,IAAnC,EAAyC;MACrCY,UAAU,CAACE,IAAX,GAAkB,EAAlB;MACAF,UAAU,CAACG,QAAX,GAAsBnB,MAAM,CAACI,oBAA7B;IACH;;IACD,OAAOY,UAAP;EACH;;EACDI,mBAAmB,GAAG;IAClB,OAAQ,KAAKlB,aAAL,KAAuBL,oBAA/B;EACH;;AAlEkD"},"metadata":{},"sourceType":"module"}