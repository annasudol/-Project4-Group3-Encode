{"ast":null,"code":"\"use strict\";\n\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\"; // This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nexport class AlchemyWebSocketProvider extends WebSocketProvider {\n  constructor(network, apiKey) {\n    const provider = new AlchemyProvider(network, apiKey);\n    const url = provider.connection.url.replace(/^http/i, \"ws\").replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n    super(url, provider.network);\n    defineReadOnly(this, \"apiKey\", provider.apiKey);\n  }\n\n  isCommunityResource() {\n    return this.apiKey === defaultApiKey;\n  }\n\n}\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n  static getWebSocketProvider(network, apiKey) {\n    return new AlchemyWebSocketProvider(network, apiKey);\n  }\n\n  static getApiKey(apiKey) {\n    if (apiKey == null) {\n      return defaultApiKey;\n    }\n\n    if (apiKey && typeof apiKey !== \"string\") {\n      logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n    }\n\n    return apiKey;\n  }\n\n  static getUrl(network, apiKey) {\n    let host = null;\n\n    switch (network.name) {\n      case \"homestead\":\n        host = \"eth-mainnet.alchemyapi.io/v2/\";\n        break;\n\n      case \"goerli\":\n        host = \"eth-goerli.g.alchemy.com/v2/\";\n        break;\n\n      case \"matic\":\n        host = \"polygon-mainnet.g.alchemy.com/v2/\";\n        break;\n\n      case \"maticmum\":\n        host = \"polygon-mumbai.g.alchemy.com/v2/\";\n        break;\n\n      case \"arbitrum\":\n        host = \"arb-mainnet.g.alchemy.com/v2/\";\n        break;\n\n      case \"arbitrum-goerli\":\n        host = \"arb-goerli.g.alchemy.com/v2/\";\n        break;\n\n      case \"optimism\":\n        host = \"opt-mainnet.g.alchemy.com/v2/\";\n        break;\n\n      case \"optimism-goerli\":\n        host = \"opt-goerli.g.alchemy.com/v2/\";\n        break;\n\n      default:\n        logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n    }\n\n    return {\n      allowGzip: true,\n      url: \"https:/\" + \"/\" + host + apiKey,\n      throttleCallback: (attempt, url) => {\n        if (apiKey === defaultApiKey) {\n          showThrottleMessage();\n        }\n\n        return Promise.resolve(true);\n      }\n    };\n  }\n\n  isCommunityResource() {\n    return this.apiKey === defaultApiKey;\n  }\n\n}","map":{"version":3,"names":["defineReadOnly","showThrottleMessage","WebSocketProvider","Logger","version","logger","UrlJsonRpcProvider","defaultApiKey","AlchemyWebSocketProvider","constructor","network","apiKey","provider","AlchemyProvider","url","connection","replace","isCommunityResource","getWebSocketProvider","getApiKey","throwArgumentError","getUrl","host","name","arguments","allowGzip","throttleCallback","attempt","Promise","resolve"],"sources":["/Users/annasudol/Documents/encode/Project4-Group3-Encode/frontend/node_modules/@ethersproject/providers/lib.esm/alchemy-provider.js"],"sourcesContent":["\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nexport class AlchemyWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new AlchemyProvider(network, apiKey);\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n            .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arb-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-goerli\":\n                host = \"opt-goerli.g.alchemy.com/v2/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt, url) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n"],"mappings":"AAAA;;AACA,SAASA,cAAT,QAA+B,2BAA/B;AACA,SAASC,mBAAT,QAAoC,aAApC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,MAAMC,MAAM,GAAG,IAAIF,MAAJ,CAAWC,OAAX,CAAf;AACA,SAASE,kBAAT,QAAmC,yBAAnC,C,CACA;AACA;AACA;AACA;;AACA,MAAMC,aAAa,GAAG,kCAAtB;AACA,OAAO,MAAMC,wBAAN,SAAuCN,iBAAvC,CAAyD;EAC5DO,WAAW,CAACC,OAAD,EAAUC,MAAV,EAAkB;IACzB,MAAMC,QAAQ,GAAG,IAAIC,eAAJ,CAAoBH,OAApB,EAA6BC,MAA7B,CAAjB;IACA,MAAMG,GAAG,GAAGF,QAAQ,CAACG,UAAT,CAAoBD,GAApB,CAAwBE,OAAxB,CAAgC,QAAhC,EAA0C,IAA1C,EACPA,OADO,CACC,cADD,EACiB,iBADjB,CAAZ;IAEA,MAAMF,GAAN,EAAWF,QAAQ,CAACF,OAApB;IACAV,cAAc,CAAC,IAAD,EAAO,QAAP,EAAiBY,QAAQ,CAACD,MAA1B,CAAd;EACH;;EACDM,mBAAmB,GAAG;IAClB,OAAQ,KAAKN,MAAL,KAAgBJ,aAAxB;EACH;;AAV2D;AAYhE,OAAO,MAAMM,eAAN,SAA8BP,kBAA9B,CAAiD;EACzB,OAApBY,oBAAoB,CAACR,OAAD,EAAUC,MAAV,EAAkB;IACzC,OAAO,IAAIH,wBAAJ,CAA6BE,OAA7B,EAAsCC,MAAtC,CAAP;EACH;;EACe,OAATQ,SAAS,CAACR,MAAD,EAAS;IACrB,IAAIA,MAAM,IAAI,IAAd,EAAoB;MAChB,OAAOJ,aAAP;IACH;;IACD,IAAII,MAAM,IAAI,OAAQA,MAAR,KAAoB,QAAlC,EAA4C;MACxCN,MAAM,CAACe,kBAAP,CAA0B,gBAA1B,EAA4C,QAA5C,EAAsDT,MAAtD;IACH;;IACD,OAAOA,MAAP;EACH;;EACY,OAANU,MAAM,CAACX,OAAD,EAAUC,MAAV,EAAkB;IAC3B,IAAIW,IAAI,GAAG,IAAX;;IACA,QAAQZ,OAAO,CAACa,IAAhB;MACI,KAAK,WAAL;QACID,IAAI,GAAG,+BAAP;QACA;;MACJ,KAAK,QAAL;QACIA,IAAI,GAAG,8BAAP;QACA;;MACJ,KAAK,OAAL;QACIA,IAAI,GAAG,mCAAP;QACA;;MACJ,KAAK,UAAL;QACIA,IAAI,GAAG,kCAAP;QACA;;MACJ,KAAK,UAAL;QACIA,IAAI,GAAG,+BAAP;QACA;;MACJ,KAAK,iBAAL;QACIA,IAAI,GAAG,8BAAP;QACA;;MACJ,KAAK,UAAL;QACIA,IAAI,GAAG,+BAAP;QACA;;MACJ,KAAK,iBAAL;QACIA,IAAI,GAAG,8BAAP;QACA;;MACJ;QACIjB,MAAM,CAACe,kBAAP,CAA0B,qBAA1B,EAAiD,SAAjD,EAA4DI,SAAS,CAAC,CAAD,CAArE;IA1BR;;IA4BA,OAAO;MACHC,SAAS,EAAE,IADR;MAEHX,GAAG,EAAG,YAAY,GAAZ,GAAkBQ,IAAlB,GAAyBX,MAF5B;MAGHe,gBAAgB,EAAE,CAACC,OAAD,EAAUb,GAAV,KAAkB;QAChC,IAAIH,MAAM,KAAKJ,aAAf,EAA8B;UAC1BN,mBAAmB;QACtB;;QACD,OAAO2B,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;MACH;IARE,CAAP;EAUH;;EACDZ,mBAAmB,GAAG;IAClB,OAAQ,KAAKN,MAAL,KAAgBJ,aAAxB;EACH;;AAxDmD"},"metadata":{},"sourceType":"module"}