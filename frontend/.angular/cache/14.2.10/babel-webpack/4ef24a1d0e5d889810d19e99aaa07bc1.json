{"ast":null,"code":"\"use strict\";\n\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport class TupleCoder extends Coder {\n  constructor(coders, localName) {\n    let dynamic = false;\n    const types = [];\n    coders.forEach(coder => {\n      if (coder.dynamic) {\n        dynamic = true;\n      }\n\n      types.push(coder.type);\n    });\n    const type = \"tuple(\" + types.join(\",\") + \")\";\n    super(\"tuple\", type, localName, dynamic);\n    this.coders = coders;\n  }\n\n  defaultValue() {\n    const values = [];\n    this.coders.forEach(coder => {\n      values.push(coder.defaultValue());\n    }); // We only output named properties for uniquely named coders\n\n    const uniqueNames = this.coders.reduce((accum, coder) => {\n      const name = coder.localName;\n\n      if (name) {\n        if (!accum[name]) {\n          accum[name] = 0;\n        }\n\n        accum[name]++;\n      }\n\n      return accum;\n    }, {}); // Add named values\n\n    this.coders.forEach((coder, index) => {\n      let name = coder.localName;\n\n      if (!name || uniqueNames[name] !== 1) {\n        return;\n      }\n\n      if (name === \"length\") {\n        name = \"_length\";\n      }\n\n      if (values[name] != null) {\n        return;\n      }\n\n      values[name] = values[index];\n    });\n    return Object.freeze(values);\n  }\n\n  encode(writer, value) {\n    return pack(writer, this.coders, value);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.name, unpack(reader, this.coders));\n  }\n\n}","map":{"version":3,"names":["Coder","pack","unpack","TupleCoder","constructor","coders","localName","dynamic","types","forEach","coder","push","type","join","defaultValue","values","uniqueNames","reduce","accum","name","index","Object","freeze","encode","writer","value","decode","reader","coerce"],"sources":["/Users/annasudol/Documents/encode/Project4-Group3-Encode/frontend/node_modules/@ethersproject/abi/lib.esm/coders/tuple.js"],"sourcesContent":["\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport class TupleCoder extends Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, value) {\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n"],"mappings":"AAAA;;AACA,SAASA,KAAT,QAAsB,kBAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,SAA7B;AACA,OAAO,MAAMC,UAAN,SAAyBH,KAAzB,CAA+B;EAClCI,WAAW,CAACC,MAAD,EAASC,SAAT,EAAoB;IAC3B,IAAIC,OAAO,GAAG,KAAd;IACA,MAAMC,KAAK,GAAG,EAAd;IACAH,MAAM,CAACI,OAAP,CAAgBC,KAAD,IAAW;MACtB,IAAIA,KAAK,CAACH,OAAV,EAAmB;QACfA,OAAO,GAAG,IAAV;MACH;;MACDC,KAAK,CAACG,IAAN,CAAWD,KAAK,CAACE,IAAjB;IACH,CALD;IAMA,MAAMA,IAAI,GAAI,WAAWJ,KAAK,CAACK,IAAN,CAAW,GAAX,CAAX,GAA6B,GAA3C;IACA,MAAM,OAAN,EAAeD,IAAf,EAAqBN,SAArB,EAAgCC,OAAhC;IACA,KAAKF,MAAL,GAAcA,MAAd;EACH;;EACDS,YAAY,GAAG;IACX,MAAMC,MAAM,GAAG,EAAf;IACA,KAAKV,MAAL,CAAYI,OAAZ,CAAqBC,KAAD,IAAW;MAC3BK,MAAM,CAACJ,IAAP,CAAYD,KAAK,CAACI,YAAN,EAAZ;IACH,CAFD,EAFW,CAKX;;IACA,MAAME,WAAW,GAAG,KAAKX,MAAL,CAAYY,MAAZ,CAAmB,CAACC,KAAD,EAAQR,KAAR,KAAkB;MACrD,MAAMS,IAAI,GAAGT,KAAK,CAACJ,SAAnB;;MACA,IAAIa,IAAJ,EAAU;QACN,IAAI,CAACD,KAAK,CAACC,IAAD,CAAV,EAAkB;UACdD,KAAK,CAACC,IAAD,CAAL,GAAc,CAAd;QACH;;QACDD,KAAK,CAACC,IAAD,CAAL;MACH;;MACD,OAAOD,KAAP;IACH,CATmB,EASjB,EATiB,CAApB,CANW,CAgBX;;IACA,KAAKb,MAAL,CAAYI,OAAZ,CAAoB,CAACC,KAAD,EAAQU,KAAR,KAAkB;MAClC,IAAID,IAAI,GAAGT,KAAK,CAACJ,SAAjB;;MACA,IAAI,CAACa,IAAD,IAASH,WAAW,CAACG,IAAD,CAAX,KAAsB,CAAnC,EAAsC;QAClC;MACH;;MACD,IAAIA,IAAI,KAAK,QAAb,EAAuB;QACnBA,IAAI,GAAG,SAAP;MACH;;MACD,IAAIJ,MAAM,CAACI,IAAD,CAAN,IAAgB,IAApB,EAA0B;QACtB;MACH;;MACDJ,MAAM,CAACI,IAAD,CAAN,GAAeJ,MAAM,CAACK,KAAD,CAArB;IACH,CAZD;IAaA,OAAOC,MAAM,CAACC,MAAP,CAAcP,MAAd,CAAP;EACH;;EACDQ,MAAM,CAACC,MAAD,EAASC,KAAT,EAAgB;IAClB,OAAOxB,IAAI,CAACuB,MAAD,EAAS,KAAKnB,MAAd,EAAsBoB,KAAtB,CAAX;EACH;;EACDC,MAAM,CAACC,MAAD,EAAS;IACX,OAAOA,MAAM,CAACC,MAAP,CAAc,KAAKT,IAAnB,EAAyBjB,MAAM,CAACyB,MAAD,EAAS,KAAKtB,MAAd,CAA/B,CAAP;EACH;;AAnDiC"},"metadata":{},"sourceType":"module"}